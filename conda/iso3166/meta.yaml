{% set name = "iso3166" %}
{% set version = "0.9" %}
{% set file_ext = "tar.gz" %}
{% set hash_type = "sha256" %}
{% set hash_value = "545a9dbf57b56acfa0dad7978cae2bdd8e0ef4c48cd8aab50c335f0d46eda042" %}

package:
  name: '{{ name|lower }}'
  version: '{{ version }}'

source:
  fn: '{{ name }}-{{ version }}.{{ file_ext }}'
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.{{ file_ext }}
  '{{ hash_type }}': '{{ hash_value }}'

build:
  number: 0
  script: python setup.py install --single-version-externally-managed --record=record.txt

requirements:
  host:
    - python
    - setuptools
  run:
    - python

test:
  imports:
    - iso3166

about:
  home: http://github.com/deactivated/python-iso3166
  license: MIT
  license_family: MIT
  license_file: ''
  summary: Self-contained ISO 3166-1 country definitions.
  description: "============================================================\n python-iso3166 - Standalone ISO 3166-1 country definitions\n============================================================\n\n\
    :Authors:\n        Mike Spindel\n:Version: 0.9\n\n\nISO 3166-1 defines two-letter, three-letter, and three-digit country\ncodes.  `python-iso3166` is a self-contained module that converts\nbetween these\
    \ codes and the corresponding country name.\n\n\nInstallation\n============\n\n::\n\n  $ pip install iso3166\n\n\nUsage\n=====\n\n\nCountry details\n---------------\n\n::\n\n  >>> from iso3166 import\
    \ countries\n  >>>\n  >>> countries.get('us')\n  Country(name=u'United States', alpha2='US', alpha3='USA', numeric='840')\n  >>> countries.get('ala')\n  Country(name=u'\\xc5land Islands', alpha2='AX',\
    \ alpha3='ALA', numeric='248')\n  >>> countries.get(8)\n  Country(name=u'Albania', alpha2='AL', alpha3='ALB', numeric='008')\n\n\nCountry lists and indexes\n-------------------------\n\n::\n\n  >>>\
    \ from iso3166 import countries\n\n  >>> for c in countries:\n         print c\n  >>> Country(name=u'Afghanistan', alpha2='AF', alpha3='AFG', numeric='004')\n  Country(name=u'\\xc5land Islands', alpha2='AX',\
    \ alpha3='ALA', numeric='248')\n  Country(name=u'Albania', alpha2='AL', alpha3='ALB', numeric='008')\n  Country(name=u'Algeria', alpha2='DZ', alpha3='DZA', numeric='012')\n\n::\n\n  >>> import iso3166\n\
    \n  >>> iso3166.countries_by_name\n  >>> {u'AFGHANISTAN': Country(name=u'Afghanistan', alpha2='AF', alpha3='AFG', numeric='004'),\n  u'ALBANIA': Country(name=u'Albania', alpha2='AL', alpha3='ALB', numeric='008'),\n\
    \  u'ALGERIA': Country(name=u'Algeria', alpha2='DZ', alpha3='DZA', numeric='012'),\n  ...\n\n  >>> iso3166.countries_by_numeric\n  >>> {'004': Country(name=u'Afghanistan', alpha2='AF', alpha3='AFG',\
    \ numeric='004'),\n  '008': Country(name=u'Albania', alpha2='AL', alpha3='ALB', numeric='008'),\n  '010': Country(name=u'Antarctica', alpha2='AQ', alpha3='ATA', numeric='010'),\n  ...\n\n  >>> iso3166.countries_by_alpha2\n\
    \  >>> {'AD': Country(name=u'Andorra', alpha2='AD', alpha3='AND', numeric='020'),\n  'AE': Country(name=u'United Arab Emirates', alpha2='AE', alpha3='ARE', numeric='784'),\n  'AF': Country(name=u'Afghanistan',\
    \ alpha2='AF', alpha3='AFG', numeric='004'),\n  ...\n\n  >>> iso3166.countries_by_alpha3\n  >>> {'ABW': Country(name=u'Aruba', alpha2='AW', alpha3='ABW', numeric='533'),\n  'AFG': Country(name=u'Afghanistan',\
    \ alpha2='AF', alpha3='AFG', numeric='004'),\n  'AGO': Country(name=u'Angola', alpha2='AO', alpha3='AGO', numeric='024'),\n  ..."
  doc_url: ''
  dev_url: ''

extra:
  recipe-maintainers: ''
